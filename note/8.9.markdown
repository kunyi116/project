构造函数
    普通函数在编写时，首字母一般小写 构造函数在编写时，首字母一般大写
    当通过new关键字调用一个函数时 这个函数称为构造函数
    普通函数与构造函数有什么区别
    调用方式不同
        普通函数只需要通过函数名()进行调用
        构造函数通过new关键字调用
    返回值
        普通函数返回值return返回结果
        构造函数返回值是new关键字生成的对象
    原型对象 实例化对象 构造函数
        原型对象 prototype
            所有函数都有一个原型对象prototype 并且只有函数才拥有原型对象 原型对象也是一个对象
        构造函数 construstor
            函数原型对象的构造函数 就是这个函数自己
        实例化对象
            通过new关键字从函数run()创建一个对象obj 可以把obj称为run的2实例化对象
            实例化对象和普通对象没有任何的区别

         __proto__
         每个对象都有一个通用属性__proto__ 这是浏览器实现的属性 通过这个属性我们可以访问你到构造函数constructor伤的原型对象prototype

         new关键字 创建对象时发生了什么
            使用new关键字 从函数上创建一个新的对象 将这个空对象的构造函数 constructor 设置为函数 将新建的对象作为this指向
            在普通函数中 this指向window对象
            在事件绑定函数中 谁绑定 this就指向谁
            如果对函数进行构造 new 构造之后

            如果想要拿到函数内部属性或者方法 我们可以对函数进行构造 构造完以后 就可以得到一个对象 通过属性名的形式就可以调用函数内部属性或者方法

        原型链
            在js中 几乎所有的对象都是object 类型 它们都会从object.prototype继承方法和属性

定时器
    在一定时间内 可以执行一次或者多次
        steTimeout
            在一定的时间内执行一次
        setInterval
            在一定时间内执行多次 除非清除定时器 否则一直执行
            格式 
                setInterval(function (){
                    执行代码
                },时间) 这里的时间单位是毫秒
                clearInterval 清除时间定时器

防抖与节流
    


    


